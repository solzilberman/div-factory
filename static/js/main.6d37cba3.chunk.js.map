{"version":3,"sources":["components/generator/Controls.js","components/Home.js","components/About.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","input","Controls","useState","value1","setValue1","value2","setValue2","value3","setValue3","open","setOpen","borderColor","setBorderColor","handleClose","classes","style","margin","border","justifyContent","textAlign","display","height","borderRadius","boxShadow","Card","flexFlow","alignItems","marginRight","marginTop","Slider","className","defaultValue","aria-labelledby","valueLabelDisplay","value","onChange","event","newValue","paddingBottom","Input","target","Number","inputProps","step","min","max","type","IconButton","color","onClick","Dialog","onClose","aria-describedby","DialogContent","onChangeComplete","hex","console","log","TextareaAutosize","required","multiline","id","label","fullWidth","variant","Home","useDencrypt","result","dencrypt","useEffect","action","setInterval","clearInterval","fontSize","About","Projects","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6d37cba3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport {\r\n    Typography,\r\n    Slider,\r\n    makeStyles,\r\n    Input,\r\n    ExpansionPanel,\r\n    IconButton,\r\n    Dialog,\r\n    Button,\r\n    DialogActions,\r\n    DialogContent,\r\n    Card,\r\n    TextareaAutosize\r\n} from '@material-ui/core';\r\nimport { SketchPicker, BlockPicker, SwatchesPicker, TwitterPicker, CompactPicker } from 'react-color';\r\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n    input: {\r\n        width: 42,\r\n    },\r\n});\r\n\r\nexport default function Controls() {\r\n\r\n    //borderRadius\r\n    const [value1, setValue1] = useState(1)\r\n    //thickness\r\n    const [value2, setValue2] = useState(10)\r\n\r\n    //shadow\r\n    const [value3, setValue3] = useState(30)\r\n    const [open, setOpen] = useState(false);\r\n\r\n    //bordercolor\r\n    const [borderColor, setBorderColor] = useState('#00000');\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const handleChangeComplete = (color) => {\r\n        setBorderColor(color.hex);\r\n        console.log(color)\r\n        handleClose();\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setValue1(newValue);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setValue1(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const handleSliderChange2 = (event, newValue) => {\r\n        setValue2(newValue);\r\n    };\r\n\r\n    const handleInputChange2 = (event) => {\r\n        setValue2(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const handleSliderChange3 = (event, newValue) => {\r\n        setValue3(newValue);\r\n    };\r\n\r\n    const handleInputChange3 = (event) => {\r\n        setValue3(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const setText = () => {\r\n        return (`width: ${200}px;\r\n        height: 100px,\r\n        borderRadius: ${value1}%;\r\n        border: ${value2}px black solid;\r\n        borderColor: ${borderColor};\r\n        textAlign: center,\r\n        boxShadow: 0px 10px ${value3}px rgba(20,20,20.7)`)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ width: 'fit-content', margin: 'auto', border: '10px black', justifyContent: 'center', textAlign: 'center' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center', margin: '30px' }}>\r\n                <div style={{\r\n                    width: `${200}px`,\r\n                    height: '100px',\r\n                    borderRadius: `${value1}%`,\r\n                    border: `${value2}px solid`,\r\n                    borderColor: `${borderColor}`,\r\n                    textAlign: 'center',\r\n                    boxShadow: `0px 10px ${value3}px rgba(20,20,20.7)`\r\n                }}>\r\n                    <h3>HELLO WORLD</h3>\r\n                </div>\r\n            </div>\r\n            <div style={{ display: 'flex', width: '100%', justifyContent: 'space-evenly' }}>\r\n                <Card style={{ width: 'fit-content', margin: 'auto', height: '300px', display: 'flex', flexFlow: 'column', alignItems: 'center', marginRight: '3em' }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <div style={{ display: 'flex', width: '25em', justifyContent: 'space-evenly', alignItems: 'center', marginTop: '20px' }}>\r\n                            <div>\r\n                                <p>Border Radius</p>\r\n                            </div>\r\n                            <div>\r\n                                <Slider\r\n                                    className={classes.root}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    value={value1}\r\n                                    onChange={handleSliderChange}\r\n                                    aria-labelledby=\"input-slider\"\r\n\r\n                                    step={5}\r\n                                    marks\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                            </div>\r\n                            <div style={{ paddingBottom: '20px' }}>\r\n                                <Input\r\n                                    className={classes.input}\r\n                                    value={1}\r\n                                    margin=\"dense\"\r\n                                    onChange={handleInputChange}\r\n                                    inputProps={{\r\n                                        step: 5,\r\n                                        min: 0,\r\n                                        max: 50,\r\n                                        type: 'number',\r\n                                        'aria-labelledby': 'input-slider',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <div style={{ display: 'flex', width: '25em', justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n                            <div>\r\n                                <p>Border Width</p>\r\n                            </div>\r\n                            <div>\r\n\r\n                            </div>\r\n                            <div>\r\n                                <Slider\r\n                                    className={classes.root}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    value={value2}\r\n                                    onChange={handleSliderChange2}\r\n                                    aria-labelledby=\"input-slider\"\r\n\r\n                                    step={5}\r\n                                    marks\r\n                                    min={0}\r\n                                    max={100}\r\n                                />\r\n                            </div>\r\n                            <div style={{ paddingBottom: '20px' }}>\r\n                                <Input\r\n                                    className={classes.input}\r\n                                    value={value2}\r\n                                    margin=\"dense\"\r\n                                    onChange={handleInputChange2}\r\n                                    inputProps={{\r\n                                        step: 5,\r\n                                        min: 0,\r\n                                        max: 100,\r\n                                        type: 'number',\r\n                                        'aria-labelledby': 'input-slider',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <div style={{ display: 'flex', width: '20em', justifyContent: 'space-evenly', alignItems: 'center' }}>\r\n                            <div>\r\n                                <p>Box Shadow</p>\r\n                            </div>\r\n                            <div>\r\n                                <Slider\r\n                                    className={classes.root}\r\n                                    defaultValue={1}\r\n                                    aria-labelledby=\"discrete-slider\"\r\n                                    valueLabelDisplay=\"auto\"\r\n                                    value={typeof value3 === 'number' ? value3 : 0}\r\n                                    onChange={handleSliderChange3}\r\n                                    aria-labelledby=\"input-slider\"\r\n                                    step={5}\r\n                                    marks\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                            </div>\r\n                            <div style={{ paddingBottom: '20px' }}>\r\n                                <Input\r\n                                    className={classes.input}\r\n                                    value={value3}\r\n                                    margin=\"dense\"\r\n                                    onChange={handleInputChange3}\r\n                                    inputProps={{\r\n                                        step: 5,\r\n                                        min: 0,\r\n                                        max: 50,\r\n                                        type: 'number',\r\n                                        'aria-labelledby': 'input-slider',\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div>\r\n                        <IconButton color=\"primary\" onClick={handleClickOpen}>\r\n                            <ColorLensIcon style={{ color: `${borderColor}` }} />\r\n                        </IconButton>\r\n                        <Dialog\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            className={classes.Dialog}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n                            <DialogContent>\r\n                                <CompactPicker color={borderColor} width={'200px'} onChangeComplete={handleChangeComplete} />\r\n                            </DialogContent>\r\n                        </Dialog>\r\n                    </div>\r\n                </Card>\r\n\r\n                <div>\r\n                    <TextareaAutosize\r\n                        required\r\n                        multiline\r\n                        id=\"filled-required\"\r\n                        label=\"Required\"\r\n                        fullWidth={true}\r\n                        defaultValue={\r\n                            `width: ${200}px;\r\n                        height: 100px,\r\n                        borderRadius: ${value1}%;\r\n                        border: ${value2}px black solid;\r\n                        borderColor: ${borderColor};\r\n                        textAlign: center,\r\n                        boxShadow: 0px 10px ${value3}px rgba(20,20,20.7)`\r\n                        }\r\n                        value={setText()}\r\n                        variant=\"filled\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDencrypt } from \"use-dencrypt-effect\";\r\nimport Controls from './generator/Controls'\r\n\r\nexport default function Home() {\r\n    const { result, dencrypt } = useDencrypt();\r\n    useEffect(() => {\r\n\r\n        const action = setInterval(() => {\r\n            dencrypt(\"Div Generator\");\r\n\r\n\r\n        }, 1000);\r\n\r\n        return () => clearInterval(action);\r\n    })\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', margin: 'auto', fontSize: '24px' }}>\r\n            <h2>{result}</h2>\r\n            <Controls />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Projects() {\r\n    return (\r\n        <div>\r\n            Projects\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport { Home, About, Projects, Navbar } from './components';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/about\">\n              <About />\n            </Route>\n            <Route path=\"/projects\">\n              <Projects />\n            </Route>\n            <Route path=\"/\" component={Home}>\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}